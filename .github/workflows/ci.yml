name: CI

on:
  push:
    paths:
      - 'frontend/**'
      - 'lambdas/**'
      - 'infra/**'
      - '.github/actions/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - 'lambdas/**'
      - 'infra/**'
      - '.github/actions/**'
      - '.github/workflows/ci.yml'

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: discover
        run: |
          MATRIX=$(find lambdas -type f -name package.json -exec dirname {} \; \
            | jq -R -s -c 'split("\n") | map(select(length>0)) | map({lambda_name: (split("/")[-1]), path: .})')
          echo "matrix=${MATRIX:-[]}" >> "$GITHUB_OUTPUT"

  build-lambdas:
    runs-on: ubuntu-latest
    needs: discover
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.discover.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-lambda
        with:
          lambda_name: ${{ matrix.lambda_name }}
          path: ${{ matrix.path }}
          node_version: 22

  terraform:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: [build-lambdas]
    if: ${{ always() && (needs.build-lambdas.result == 'success' || needs.build-lambdas.result == 'skipped' || !needs.build-lambdas.result) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built Lambda artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-artifact"
          path: infra/lambdas/files
          merge-multiple: true

      - name: Terraform CI
        uses: ./.github/actions/terraform-ci
        with:
          working_directory: infra
          terraform_version: '1.9.5'
          configure_aws: 'true'
          aws_role_to_assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
          aws_region: 'eu-west-1'

  frontend_deploy:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (contains(github.event.head_commit.message, 'frontend') || contains(toJson(github.event.commits), 'frontend/')) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Deploy Frontend
        uses: ./.github/actions/frontend-deploy
        with:
          bucket: ${{ vars.FRONTEND_BUCKET }}
          role_to_assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
          cloudfront_distribution_id: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}
