name: CI

on:
  push:
    paths:
      - 'frontend/**'
      - 'lambdas/**'
      - 'infra/**'
      - '.github/actions/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - 'lambdas/**'
      - 'infra/**'
      - '.github/actions/**'
      - '.github/workflows/ci.yml'

jobs:
  discover-lambdas:
    name: Discover all Lambda directories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.discover.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find all Lambda directories
        id: discover
        run: |
          echo "🔍 Scanning for lambdas..."
          LAMBDAS=$(find lambdas -mindepth 1 -maxdepth 2 -type d -exec test -f "{}/package.json" ';' -print | jq -R -s -c 'split("\n")[:-1] | map({lambda_name: split("/")[-1], path: .})')
          echo "Found lambdas: $LAMBDAS"
          echo "matrix={\"include\": $LAMBDAS}" >> "$GITHUB_OUTPUT"

  build-lambdas:
    name: Build Lambdas
    runs-on: ubuntu-latest
    needs: [discover-lambdas]
    strategy:
      fail-fast: false
      matrix:
        lambda: ${{ fromJson(needs.discover-lambdas.outputs.matrix).include }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Package Lambda
        uses: ./.github/actions/build-lambda
        with:
          lambda_name: ${{ matrix.lambda.lambda_name }}
          path: ${{ matrix.lambda.path }}
          node_version: 22

  terraform:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: [build-lambdas]
    if: ${{ always() }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform CI
        uses: ./.github/actions/terraform-ci
        with:
          working_directory: infra
          terraform_version: '1.9.5'
          configure_aws: 'true'
          aws_role_to_assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
          aws_region: 'eu-west-1'

  frontend_deploy:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    needs: [terraform]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and Deploy Frontend
        uses: ./.github/actions/frontend-deploy
        with:
          bucket: ${{ vars.FRONTEND_BUCKET }}
          role_to_assume: ${{ secrets.AWS_TERRAFORM_ROLE_ARN }}
